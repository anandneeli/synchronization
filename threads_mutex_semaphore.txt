#include <pthread.h>
pthread_t thread_id;
int pthread_create(pthread_t *thread, const pthread_attr_t *attr,
                          void *(*start_routine) (void *), void *arg);

pthread_attr_t attr;
pthread_attr_init (&attr);
pthread_attr_setdetachstate (&attr, PTHREAD_CREATE_DETACHED);
pthread_create (&thread, &attr, &thread_function, NULL);
pthread_attr_destroy (&attr);


pthread_mutexattr_init (&attr);
pthread_mutex_t job_queue_mutex = PTHREAD_MUTEX_INITIALIZER;
pthread_mutex_lock (&job_queue_mutex);
pthread_mutex_unlock (&job_queue_mutex);


sem_t job_queue_count;
int sem_init(sem_t *sem, int pshared, unsigned int value);
int sem_post(sem_t *sem);
int sem_wait(sem_t *sem);


pthread_cond_t condition_var = PTHREAD_COND_INITIALIZER;
pthread_cond_wait( &condition_var, &count_mutex );
pthread_cond_signal( &condition_var );




f (!pthread_equal (pthread_self (), other_thread))
pthread_join (other_thread, NULL);
